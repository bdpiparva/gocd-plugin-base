/*
 * Copyright 2019 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
  }
}

apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'com.bmuschko.nexus'
apply from: "https://raw.githubusercontent.com/gocd/gocd-plugin-gradle-task-helpers/master/test-task-helper.gradle?_=${(int) (new Date().toInstant().epochSecond / 60)}"

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "com.github.bdpiparva.plugin.base"
version = '0.0.3'
description = 'Helper utility to write gocd plugins'

repositories {
  mavenCentral()
}

dependencies {
  compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.8'
  compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'

  compileOnly group: 'cd.go.plugin', name: 'go-plugin-api', version: '19.1.0'
  compileOnly group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.4.1'
  compileOnly group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.4.1'

  testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.4.1'
  testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.4.1'
  testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.4.1'
  testCompile group: 'org.assertj', name: 'assertj-core', version: '3.12.2'
  testCompile group: 'org.mockito', name: 'mockito-core', version: '2.25.1'
  testCompile group: 'cd.go.plugin', name: 'go-plugin-api', version: '19.1.0'
  testCompile group: 'org.skyscreamer', name: 'jsonassert', version: '1.5.0'
}

test {
  useJUnitPlatform()
}

extraArchive {
  sources = false
  tests = true
  javadoc = false
}

task sourcesJar(type: Jar, dependsOn: classes) {
  archiveClassifier = 'sources'
  from sourceSets.main.allSource
}


task javadocJar(type: Jar, dependsOn: javadoc) {
  archiveClassifier = 'javadoc'
  from javadoc.destinationDir
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      modifyPom
      from components.java
    }
  }
}

modifyPom {
  project {
    name = project.name
    groupId = project.group
    artifactId = rootProject.name
    version = project.version
    packaging 'jar'
    description project.description
    url 'https://github.com/bdpiparva/gocd-plugin-base'
    inceptionYear 2018

    scm {
      url 'https://github.com/bdpiparva/gocd-plugin-base'
      connection 'scm:https://github.com/bdpiparva/gocd-plugin-base'
      developerConnection 'https://github.com/bdpiparva'
    }

    issueManagement {
      url 'https://github.com/bdpiparva/gocd-plugin-base/issues'
      system 'GitHub'
    }

    licenses {
      license {
        name 'Apache License, Version 2.0'
        url 'https://www.apache.org/licenses/LICENSE-2.0'
        distribution 'repo'
      }
    }

    organization {
      name 'ThoughtWorks, Inc.'
      url 'https://www.thoughtworks.com'
    }

    developers {
      developer {
        id = 'bdpiparva'
        name = 'Bhupendrakumar Piprava'
      }
    }
  }
}

javadoc {
  title = 'Helper utility to write gocd plugins'

  options {
    windowTitle = 'Helper utility to write gocd plugins'
    docTitle = 'Helper utility to write gocd plugins'
    header = 'Helper utility to write gocd plugins'
    bottom = "Copyright &copy; ${Calendar.getInstance().get(Calendar.YEAR).toString()} ThoughtWorks, Inc."
  }

  if (JavaVersion.current().isJava9Compatible()) {
    options.addBooleanOption('html5', true)
  }
}
